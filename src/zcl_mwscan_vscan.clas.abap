class ZCL_MWSCAN_VSCAN definition
  public
  final
  create public .

public section.

  interfaces IF_VSCAN_INSTANCE .
protected section.
private section.

  methods GET_HTTP_CLIENT
    returning
      value(CLIENT) type ref to IF_HTTP_CLIENT .
ENDCLASS.



CLASS ZCL_MWSCAN_VSCAN IMPLEMENTATION.


  METHOD get_http_client.
    cl_http_client=>create_by_destination(
      EXPORTING
        destination                = 'MWSCAN'
      IMPORTING
        client                     = client ).
  ENDMETHOD.


  METHOD if_vscan_instance~scan_bytes.
    DATA mwscan TYPE REF TO zcl_mwscan_client.
    DATA(client) = me->get_http_client( ).
    CREATE OBJECT mwscan
      EXPORTING
        ii_client = client.
    DATA(return_scan) = mwscan->zif_mwscan_interface~scans_a_file_for_malware_( data_to_scan = if_data ).
    IF return_scan-_200_app_json-malwaredetected = abap_true.
      ef_scanrc = if_vscan_instance=>con_scanrc_virus_found.
      APPEND INITIAL LINE TO et_infection ASSIGNING FIELD-SYMBOL(<infection>).
      <infection>-virus_name = return_scan-_200_app_json-finding.
    ENDIF.
  ENDMETHOD.


  METHOD if_vscan_instance~scan_text.
    DATA mwscan TYPE REF TO zcl_mwscan_client.
    DATA(client) = me->get_http_client( ).
    CREATE OBJECT mwscan
      EXPORTING
        ii_client = client.
    DATA(return_scan) = mwscan->zif_mwscan_interface~scans_a_file_for_malware_( cdata_to_scan = if_text ).
    IF return_scan-_200_app_json-malwaredetected = abap_true.
      ef_scanrc = if_vscan_instance=>con_scanrc_virus_found.
      APPEND INITIAL LINE TO et_infection ASSIGNING FIELD-SYMBOL(<infection>).
      <infection>-virus_name = return_scan-_200_app_json-finding.
    ENDIF.
  ENDMETHOD.
ENDCLASS.
